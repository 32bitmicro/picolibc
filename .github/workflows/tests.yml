name: tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        meson_flags: [
          "",
          "-Dio-float-exact=false",
          "-Dtinystdio=false -Dnewlib-io-float=true -Dio-long-long=true",
          "-Dnewlib-locale-info=true -Dnewlib-locale-info-extended=true -Dnewlib-mb=true",
          "-Dtinystdio=false -Dnewlib-io-float=true -Dio-long-long=true -Dnewlib-locale-info=true -Dnewlib-locale-info-extended=true -Dnewlib-mb=true",
          "-Dnewlib-iconv-external-ccs=true"
        ]
        test: [
           "./.github/do-test do-native-configure build-native",
           "./.github/do-test do-riscv-configure build-riscv",
           "./.github/do-test do-arm-configure build-arm",
           "./.github/do-test do-aarch64-configure build-aarch64",
           "./.github/do-build do-lx106-configure build-lx106",
           "./.github/do-test do-rv32imac-configure build-rv32imac"
        ]

    steps:
      - name: 'Clone picolibc'
        uses: actions/checkout@v2
        with:
          path: picolibc

      - name: 'Build picolibc container'
        run: |
          docker build -t picolibc \
            -f picolibc/.github/Dockerfile \
            picolibc

      - name: 'Test'
        run: |
          docker run --rm picolibc ${{ matrix.test }} ${{ matrix.meson_flags }}
