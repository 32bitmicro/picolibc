#!/bin/sh

qemu=qemu-system-riscv32

# select the program
elf="$1"
shift

case "$elf" in
    */rv32*_ilp32*/*)
	qemu=qemu-system-riscv32
	cpu=rv32
	;;
    */rv64*_lp64*/*)
	qemu=qemu-system-riscv64
	cpu=rv64
	;;
    *)
	qemu=qemu-system-riscv64
	options="i m a f d c"
	cpu=rv64
	;;
esac

cpu="$cpu,mmu=false,pmp=false"

if [ -z "$options" ]; then
    options=`echo $elf | sed 's/.*rv[36][24]\([a-z]*\)_.*$/\1/' | sed 's/\(.\)/\1 /g'`
fi

all_options="i e g m a f d c s u"

for o in $all_options; do
    if `echo $options | grep -q $o`; then
	value=true
    else
	value=false
    fi
    cpu=$cpu",$o=$value"
done

echo cpu is "$cpu"

# Set the target machine
machine=virt,accel=tcg

# Map stdio to a multiplexed character device so we can use it
# for the monitor and semihosting output

chardev=stdio,mux=on,id=stdio0

# Point the semihosting driver at our new chardev

semi=enable=on,chardev=stdio0,arg="test-file"

# Point the monitor at the new chardev too

mon=none

# Disable the serial port

serial=none

$qemu -chardev $chardev -semihosting-config $semi -monitor $mon -serial $serial -machine $machine -cpu $cpu -kernel $elf -nographic "$@" -bios none < /dev/null
